@page "/"
@using CTO.Price.Admin.Services
@using static RZ.Foundation.Prelude
@using CTO.Price.Admin.Data
@inject IUserService userService;
@inject IPriceApi priceApi
@inject SpinnerService spinnerService

<AuthorizeView Policy="@RolePolicy.Home.ToString()">
    <Authorized>
        <div class="container-fluid">
            <h1>Dashboard</h1>
            <div class="row">
                <div class="col-sm-6">
                    <div class="row">
                        <ul class="list-group container-fluid">
                            <li class="list-group-item col-xs-12 active">Price</li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Total
                                <span class="badge badge-primary badge-pill">@totalPriceMessage</span>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="row">
                        <ul class="list-group container-fluid">

                            <li class="list-group-item active">Scheduler</li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Total
                                <span class="badge badge-primary badge-pill">@totalScheduleMessage</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Pending start schedules
                                <span class="badge badge-primary badge-pill">@totalPendingStartSchedulesMessage</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Pending end schedules
                                <span class="badge badge-primary badge-pill">@totalPendingEndSchedulesMessage</span>
                            </li>

                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code
{
        const string ErrorMessage = "ERROR!";
    string totalPriceMessage = string.Empty;
    string totalScheduleMessage = string.Empty;
    string totalPendingStartSchedulesMessage = string.Empty;
    string totalPendingEndSchedulesMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        spinnerService.Show();
        (await TryAsync(() => priceApi.GetPriceMetrics()).Try()).Then(
            res =>
            {
                totalPriceMessage = res.TotalPrices.ToString();
                totalScheduleMessage = res.TotalSchedules.ToString();
                totalPendingStartSchedulesMessage = res.TotalPendingStartSchedules.ToString();
                totalPendingEndSchedulesMessage = res.TotalPendingEndSchedules.ToString();
            }, _ => { totalPriceMessage = totalScheduleMessage = totalPendingStartSchedulesMessage = totalPendingEndSchedulesMessage = ErrorMessage; });
        spinnerService.Hide();
    }
}