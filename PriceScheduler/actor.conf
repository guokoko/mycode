akka {
    loggers= ["Akka.Logger.Serilog.SerilogLogger, Akka.Logger.Serilog"]

    log-config-on-start = on
    coordinated-shutdown.exit-clr = on

    cluster {   
        shutdown-after-unsuccessful-join-seed-nodes = 180s
                
        role {
            seed.min-nr-of-members = 3
            metric.min-nr-of-members = 1
            importer.min-nr-of-members = 1
            herald.min-nr-of-members = 1
            publisher.min-nr-of-members = 1            
        }

        split-brain-resolver {
            # Enable one of the available strategies (see descriptions below):
            # static-quorum, keep-majority, keep-oldest, keep-referee
            active-strategy = static-quorum

            # Decision is taken by the strategy when there has been no membership or
            # reachability changes for this duration, i.e. the cluster state is stable.
            stable-after = 30s

            static-quorum {
                # minimum number of nodes that the cluster must have
                quorum-size = 2

                # if the 'role' is defined the decision is based only on members with that 'role'
                role = "seed"
            }
        }
        
    }

    actor {
        provider = cluster

        serializers {
          hyperion = "Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion"
        }
        serialization-bindings {
          "System.Object" = hyperion
        }

        deployment {
            /nodes {
                router = broadcast-group
                routees.paths = ["/user/node-manager"]
                cluster {
                    enabled = on
                    allow-local-routees = on
                }
            }
        
            /heralds {
                router = round-robin-pool
                use-role = herald
                cluster {
                    enabled = on
                    allow-local-routees = on
                    use-role = herald
                    max-nr-of-instances-per-node = 256
                }
            }
            
            /publishers {
                router = round-robin-pool
                cluster {
                    enabled = on
                    allow-local-routees = on
                    use-role = publisher
                    max-nr-of-instances-per-node = 512
                }
            }
        }
        
        debug {  
              receive = on 
              autoreceive = on
              lifecycle = on
              event-stream = on
              unhandled = on
        }
    }
}
